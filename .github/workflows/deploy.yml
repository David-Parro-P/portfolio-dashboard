name: CI/CD Pipeline

on:
 push:
   branches: [ main, develop ]
 pull_request:
   branches: [ main ]

env:
 IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
 DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}

jobs:
 test:
   runs-on: ubuntu-22.04
   steps:
     - uses: actions/checkout@v3
     
     - name: Set up Python
       uses: actions/setup-python@v4
       with:
         python-version: '3.12'
         
     - name: Install dependencies
       working-directory: ./processor
       run: |
         curl -sSL https://install.python-poetry.org | python3 -
         poetry install --no-root
       
     - name: Run tests
       working-directory: ./processor
       run: poetry run pytest

 build-and-push:
   needs: [test]
   runs-on: ubuntu-22.04
   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
   environment: production
   
   steps:
     - uses: actions/checkout@v3
     
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
     
     - name: Login to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
     
     - name: Docker Build and Push
       uses: docker/build-push-action@v4
       with:
         context: ./processor
         push: true
         tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}-processor:latest
         secrets: |
           GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
         
 deploy:
   needs: build-and-push
   runs-on: ubuntu-22.04
   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
   environment: production
 
   steps:
     - uses: actions/checkout@v3

     - name: Deploy
       uses: appleboy/ssh-action@master
       with:
           host: ${{ secrets.DEPLOY_HOST }}
           username: ${{ secrets.DEPLOY_USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           envs: |
               DEPLOY_PATH
               IMAGE_NAME
               DOCKER_USERNAME
               DOCKER_TOKEN
               N8N_USER
               N8N_PASSWORD
               METABASE_ADMIN_EMAIL
               METABASE_ADMIN_PASSWORD
               N8N_ENCRYPTION_KEY
               SSL_CERTIFICATE
               SSL_PRIVATE_KEY
           script: ${{ secrets.DEPLOY_SCRIPT }}

     - name: Verify Deployment
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.DEPLOY_HOST }}
         username: ${{ secrets.DEPLOY_USER }}
         key: ${{ secrets.SSH_PRIVATE_KEY }}
         script: |
           cd ${{ secrets.DEPLOY_PATH }}
           if ! docker compose ps --quiet | grep -q .; then
             echo "Deployment verification failed"
             exit 1
           fi